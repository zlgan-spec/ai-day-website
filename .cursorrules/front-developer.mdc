---
alwaysApply: true
---
## 技术栈（必须遵循）

- **HTML5**（语义化标签、可访问性）  
- **原生 JavaScript（ES6+）**（不使用框架）  
- **TailwindCSS**（原子化样式）  
- **Supabase**（数据库、认证、实时功能）
- **Github**（代码托管与自动化部署）

❌ 禁止建议或使用：React、Next.js、Vue、Angular、TypeScript 等前端框架或语言。

---

## 代码实现规范

- 尽量使用 **早返回（early return）** 提升可读性。  
- 样式优先使用 **Tailwind**，如需自定义需加项目前缀（例如 `.project-*`）。  
- 命名应语义化、清晰。事件处理函数使用 `handle*` 前缀（如 `handleClick`、`handleKeyDown`）。  
- 函数定义应使用 `const fn = () => {}`，而不是 function 声明。  
- 注重可访问性：交互元素应包含 `tabindex="0"`、`aria-label`，并处理点击与键盘事件。  

### JavaScript 示例

```javascript
// 模块结构
const ModuleName = {
  config: {},
  state: {},
  init() {},
  publicMethod() {},
  _privateMethod() {}
};

// Supabase 异常处理（必须）
try {
  const { data, error } = await supabase.from('table').select();
  if (error) throw error;
  return data;
} catch (error) {
  console.error('操作失败:', error);
  showMessage('操作失败，请稍后重试', 'error');
  return null;
}

// 命名规范
const userName = 'camelCase';        // 变量/函数：小驼峰
const API_BASE_URL = 'UPPER_SNAKE';  // 常量：全大写下划线
class UserManager {}                 // 类：PascalCase
description:
globs:
alwaysApply: true
---
